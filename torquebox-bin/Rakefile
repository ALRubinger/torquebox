require 'fileutils'
require 'open3'

DEPLOYER_DIR = "#{File.dirname(__FILE__)}/target/deployer"
PKG_DIR      = "#{File.dirname(__FILE__)}/target/packages"
STAGE_DIR    = "#{File.dirname(__FILE__)}/target/stage"
GEMS_DIR     = "#{File.dirname(__FILE__)}/target/gems"
CACHE_DIR    = ENV['PACKAGE_CACHE_DIR'] || "#{File.dirname(__FILE__)}/../package-cache"

SRC_DIR      = "#{File.dirname(__FILE__)}/src/main/resources"

JDBC_GEMS = [
  'activerecord-jdbc-adapter',

  'activerecord-jdbcderby-adapter',
  'jdbc-derby',

  'activerecord-jdbch2-adapter',
  'jdbc-h2',

  'activerecord-jdbchsqldb-adapter',
  'jdbc-hsqldb',

  'activerecord-jdbcmysql-adapter',
  'jdbc-mysql',

  'activerecord-jdbcpostgresql-adapter',
  'jdbc-postgres',

  'activerecord-jdbcsqlite3-adapter',
  'jdbc-sqlite3',
]

OTHER_GEMS = [
  'rack',
]

JBOSS_VERSION     = ENV['jboss.as.version'] || '6.0.0.M1'
JRUBY_PKG_VERSION = ENV['jruby.version']    || '1.4.0'
HORNETQ_VERSION   = ENV['hornetq.version']  || '2.0.0.GA'
RAILS_VERSION     = ENV['rails.version']    || '2.3.4'

JBOSS_BASE_URL  = "http://voxel.dl.sourceforge.net/sourceforge/jboss/"
HORNETQ_BASE_URL= "http://downloads.sourceforge.net/project/hornetq/"
JRUBY_BASE_URL  = "http://jruby.kenai.com/downloads"

namespace :maven do
  task 'compile'=>[ 'stage' ]
end

task 'pull-packages'=>[ 'pull-jboss', 'pull-jruby' ]

directory "#{PKG_DIR}/jboss"
directory "#{PKG_DIR}/jruby"
directory "#{CACHE_DIR}/jboss"
directory "#{CACHE_DIR}/jruby"
directory "#{STAGE_DIR}"

file "#{PKG_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip"=>[
    "#{CACHE_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip",
    "#{PKG_DIR}/jboss"
  ] do
  puts "Copying JBoss #{JBOSS_VERSION} JDK6 from package-cache"
  FileUtils.cp( "#{CACHE_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip", "#{PKG_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip" )
end

file "#{PKG_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip"=>[
    "#{CACHE_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip",
    "#{PKG_DIR}/jruby"
  ] do
  puts "Copying JRuby #{JBOSS_VERSION} from package-cache"
  FileUtils.cp( "#{CACHE_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip", "#{PKG_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip" )
end

file "#{PKG_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip"=>[
    "#{CACHE_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip",
    "#{PKG_DIR}/jboss"
  ] do
  puts "Copying HornetQ #{HORNETQ_VERSION} from package-cache"
  FileUtils.cp( "#{CACHE_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip", "#{PKG_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip" )
end

desc "Cache JBoss"
task 'cache:jboss'=>["#{CACHE_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip"]

desc "Cache HornetQ"
task 'cache:hornetq'=>["#{CACHE_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip"]

desc "Cache JRuby"
task 'cache:jruby'=>["#{CACHE_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip"]

file "#{CACHE_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip"=>[ "#{CACHE_DIR}/jboss" ] do
  Dir.chdir( "#{CACHE_DIR}/jboss" ) do 
    puts "Downloading JBoss #{JBOSS_VERSION} JDK6"
    url = "#{JBOSS_BASE_URL}/jboss-#{JBOSS_VERSION}.zip"
    puts `wget --quiet #{url}`
  end
end

file "#{CACHE_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip"=>[ "#{CACHE_DIR}/jruby" ] do
  Dir.chdir( "#{CACHE_DIR}/jruby" ) do 
    puts "Downloading JRuby #{JRUBY_PKG_VERSION}"
    url = "#{JRUBY_BASE_URL}/#{JRUBY_PKG_VERSION}/jruby-bin-#{JRUBY_PKG_VERSION}.zip"
    puts `wget --quiet #{url}`
  end
end

file "#{CACHE_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip"=>[ "#{CACHE_DIR}/jboss" ] do
  Dir.chdir( "#{CACHE_DIR}/jboss" ) do 
    puts "Downloading HornetQ #{HORNETQ_VERSION}"
    url = "#{HORNETQ_BASE_URL}/#{HORNETQ_VERSION}/hornetq-#{HORNETQ_VERSION}.zip"
    puts `wget --quiet #{url}`
  end
end


task 'stage'=>[ 
        "#{PKG_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip", 
        "#{PKG_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip", 
        "#{PKG_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip", 
        "#{STAGE_DIR}" 
      ] do
  puts "Staging"
  Dir[ "#{STAGE_DIR}/*" ].each do |item|
    FileUtils.rm_rf( item )
  end
  Dir.chdir( "#{STAGE_DIR}" ) do
    puts `unzip -qo #{PKG_DIR}/jboss/jboss-#{JBOSS_VERSION}.zip`
    FileUtils.mv( "jboss-#{JBOSS_VERSION}", 'jboss' ) 
    Dir.chdir( "jboss/server/" ) do
      Dir[ '*/deploy/ROOT.war' ].each do |root_war|
        conf = root_war.split('/').first
        puts "#{conf}: Removing ROOT.war"
        FileUtils.rm_rf( root_war )
        puts "#{conf}: Installing TorqueBox deployer"
        FileUtils.cp( "#{DEPLOYER_DIR}/torquebox-core-deployer.jar", "#{conf}/deployers" )
      end
    end
    puts `unzip -qo #{PKG_DIR}/jboss/hornetq-#{HORNETQ_VERSION}.zip`
    Dir.chdir( 'hornetq-2.0.0.GA/config/jboss-as' ) do
      ENV['JBOSS_HOME'] = "#{STAGE_DIR}/jboss/"
      cmd = "/bin/sh build.sh"
      Open3.popen3( cmd ) do |stdin, stdout, stderr|
        stdin.close
        stdout_thr = Thread.new(stdout) {|io|
          io.each_line do |l|
            $stdout.puts l
            $stdout.flush
          end
        }
        stderr_thr = Thread.new(stderr) {|io|
          io.each_line do |l|
            $stderr.puts l
            $stderr.flush
          end
        }
        stdout_thr.join
        stderr_thr.join
      end
    end
    Dir.chdir( 'jboss/server' ) do
      Dir[ '*-with-hornetq' ].each do |profile|
        if ( profile =~ /(.*)-with-hornetq/ )
          base_profile = $1
          puts "Making HornetQ default for #{base_profile}"
          FileUtils.rm_rf( base_profile )
          FileUtils.mv( profile, base_profile )
        end
      end
    end
    puts `unzip -qo #{PKG_DIR}/jruby/jruby-bin-#{JRUBY_PKG_VERSION}.zip`
    FileUtils.mv( "jruby-#{JRUBY_PKG_VERSION}", 'jruby' ) 
    original_jruby_home = ENV['JRUBY_HOME']
    Dir.chdir( 'jruby' ) do
      jruby_home = ENV['JRUBY_HOME'] = Dir.pwd
      puts "Install gems in #{Dir.pwd}"

      install_gem( jruby_home, "#{GEMS_DIR}/*.gem" )
      install_gem( jruby_home, "#{JDBC_GEMS.join(' ')}" )
      install_gem( jruby_home, "#{OTHER_GEMS.join(' ')}" )
      install_gem( jruby_home, "rails -v #{RAILS_VERSION}" )

      #puts `./bin/jruby ./bin/gem install --bindir ./bin --install-dir ./lib/ruby/gems/1.8 #{GEMS_DIR}/*.gem`
      #puts `./bin/jruby ./bin/gem install --bindir ./bin --install-dir ./lib/ruby/gems/1.8 #{JDBC_GEMS.join(' ')}`
      #puts `./bin/jruby ./bin/gem install --bindir ./bin --install-dir ./lib/ruby/gems/1.8 #{OTHER_GEMS.join(' ')}`
      #puts `./bin/jruby ./bin/gem install --bindir ./bin --install-dir ./lib/ruby/gems/1.8 rails -v #{RAILS_VERSION}`
      puts "Installed gems in #{Dir.pwd}"
      FileUtils.cp( "#{SRC_DIR}/bin/rails.bat", './bin/rails.bat' )
    end
    ENV['JRUBY_HOME'] = original_jruby_home
  end
end

def install_gem(jruby_home, gems)
  puts "Install Gems: #{gems} (#{Dir.pwd})"
  cmd = "#{jruby_home}/bin/jruby #{jruby_home}/bin/gem install --bindir #{jruby_home}/bin --install-dir #{jruby_home}/lib/ruby/gems/1.8 #{gems}"
  Open3.popen3( cmd ) do |stdin, stdout, stderr|
    stdin.close
    stdout_thr = Thread.new(stdout) {|io|
      io.each_line do |l|
        $stdout.puts l
        $stdout.flush
      end
    }
    stderr_thr = Thread.new(stderr) {|io|
      io.each_line do |l|
        $stderr.puts l    
        $stderr.flush
      end
    }
    stdout_thr.join
    stderr_thr.join
  end
end

